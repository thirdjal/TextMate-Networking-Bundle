<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>axconfig</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~A</string>
	<key>name</key>
	<string>ACOS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>source.network.ios</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#glid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ha</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#slb_object</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#slb_template</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#health_monitor</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#vrrp-a</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^((?:active-)?partition) ([a-zA-Z0-9\-_\.!]+)(?:((?: network-partition)? id) (\d+))?$</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.partition.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.partition.acos</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.partition.acos</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.language.partition.acos</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?=\S|\s+$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.network.ios</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\smap-interface\b</string>
					<key>name</key>
					<string>constant.language.partition_map.acos</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>disabled</key>
		<dict>
			<key>begin</key>
			<string>\b(no|disable|shutdown)\b</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>constant.other.disabled.acos</string>
		</dict>
		<key>glid</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^(glid) (\d+)$</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.glid.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.variable.glid.acos</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=\S|\s+$)</string>
					<key>name</key>
					<string>meta.glid.acos</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#disabled</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.network.ios</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.limit.glid.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.variable.limit.glid.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(limit) (\d+)$</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>ha</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^(ha|vrrp-a) (check|conn-mirror|enable|group|(?:device-|set-)?id|interface|preemption-enable) ?(\d+)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.ha.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.ha.acos</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.variable.ha.acos</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>meta.ha_parameters.acos</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.network.ios</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#priority</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator.ha_direction.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.other.ha_heartbeat.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(both|router-interface|server-interface|vlan) ?(no-heartbeat)?</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\bip\b</string>
							<key>name</key>
							<string>keyword.other.ip.acos</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\bgateway\b</string>
							<key>name</key>
							<string>constant.language.gateway.acos</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(vrrp-a) (vrid(?:-lead)?) (default|\d{1,3}|[a-zA-Z0-9\-_\.!]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.ha.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.ha.acos</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.language.ha.acos</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=\S|\s+$)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.network.ios</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#priority</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\sfloating-ip\b</string>
							<key>name</key>
							<string>constant.language.ha_floating-ip.acos</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\stracking-options$</string>
							<key>name</key>
							<string>keyword.operator.tracking-options.acos</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.interface.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.interface.acos</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.vrid.priority.acos</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>support.variable.vrid.priority_cost.acos</string>
								</dict>
								<key>5</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.vrid.priority.acos</string>
								</dict>
								<key>6</key>
								<dict>
									<key>name</key>
									<string>support.variable.vrid.priority_cost.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(interface) ((?:trunk|ethernet) (?:\d))(?: (priority-cost) (\d+))?(?: (port-priority-cost) (\d+))?</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^(vrrp-a) (preferred-session-sync-port)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.ha.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.ha.acos</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.network.ios</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>health_monitor</key>
		<dict>
			<key>begin</key>
			<string>^((health monitor) [a-zA-Z0-9\-_\.!]+)(?: (interval) (\d+))?(?: (retry) (\d+))?(?: (timeout) (\d+))?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.health_monitor.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.health_monitor.acos</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.constant.health_monitor.interval.acos</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.health_monitor.interval.acos</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.constant.health_monitor.retry.acos</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.health_monitor.retry.acos</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>support.constant.health_monitor.timeout.acos</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.health_monitor.timeout.acos</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?=\S|\s+$)</string>
			<key>name</key>
			<string>meta.health_monitor.acos</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.health_monitor.method.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.health_monitor.method.acos</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.health_monitor.method.acos</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s(method) (?:((?:tcp|udp) port) (\d+))\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.language.health_monitor.method.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.health_monitor.method.acos</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.health_monitor.method.acos</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s(method) (http|https) (url) (GET|PUT)</string>
				</dict>
			</array>
		</dict>
		<key>priority</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.priority.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.priority.acos</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s(priority) (\d+)</string>
		</dict>
		<key>slb_member</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.slb_member.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.variable.slb_object.acos</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.port_seperator.acos</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.constant.port_number.acos</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.other.disabled.acos</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.slb_template.acos</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>support.variable.slb_template.acos</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s(member) ([a-zA-Z0-9\-_\.!]+)(:)(\d+) ?(disable)?(?:(template) ([a-zA-Z0-9\-_\.!]+))?</string>
		</dict>
		<key>slb_method</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.slb_method.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.slb_method.acos</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.slb_method.acos</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s(method)\s(\S+) ?(auto-switch)?</string>
		</dict>
		<key>slb_object</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^((slb (?:server|service-group|virtual-server)) [a-zA-Z0-9\-_\.!]+) ?(tcp|udp)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.slb_object.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language.slb_object.acos</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.language.l4_protocol.acos</string>
						</dict>
					</dict>
					<key>end</key>
					<string>^(?=\S|\s+$)</string>
					<key>name</key>
					<string>meta.slb_object.acos</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.network.ios</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#disabled</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#slb_health-check</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#slb_member</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#slb_method</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#slb_port</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.slb_conn-limit.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.limit.acos</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.slb.conn-limit.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(conn-limit)\s(\d+)\s(no-logging)?</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.aflex.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>entity.name.tag.aflex.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(aflex) \"?([a-zA-Z0-9\-_\. ]+)\"?$</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.slb_health-check.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.variable.slb_health-check.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(health-check) ([a-zA-Z0-9\-_\.!]+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.ha-group.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.ha-group.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b(ha-group) (\d+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.service-group.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>support.variable.service-group.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(service-group) ([a-zA-Z0-9\-_\.!]+)</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.source-nat.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.source-nat.acos</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.variable.source-nat-pool.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(source-nat) (auto|pool) ?([a-zA-Z0-9\-_\.!]+)?</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>constant.language.template.acos</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>storage.modifier.template.acos</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>support.variable.template.acos</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s(template) (.*) ([a-zA-Z0-9\-_\.!]+)$</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\s(ha-conn-mirror|use-rcv-hop-for-resp)$</string>
							<key>name</key>
							<string>keyword.control.slb_options.acos</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>slb_port</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.slb_port.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.port_number.acos</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.language.protocol.acos</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s(port)\s(\d+)\s+(tcp|udp|http(?:s)?)</string>
		</dict>
		<key>slb_template</key>
		<dict>
			<key>begin</key>
			<string>^(slb template) (.*) [a-zA-Z0-9\-_\.!]+$</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.slb_template.acos</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.slb_template.acos</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.slb_template.acos</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(?=\S|\s+$)</string>
			<key>name</key>
			<string>meta.slb_template.acos</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.slb_template.timeout.acos</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.slb_template.timeout.acos</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(timeout) (\d+)</string>
				</dict>
				<dict>
					<key>match</key>
					<string>reset-(?:fwd|rev)</string>
					<key>name</key>
					<string>storage.modifier.slb_template.reset.acos</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.networkdevice.acos</string>
	<key>uuid</key>
	<string>4CFAD439-8B4D-4E6D-98DC-E534500C0F86</string>
</dict>
</plist>
